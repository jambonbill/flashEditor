package com.vday.core{	import com.carlcalderon.arthropod.Debug;	import com.gs.TweenLite;	import com.vday.events.ShellEvent;		import flash.display.MovieClip;	import flash.events.MouseEvent;		/**	 * @author sgrant	 */	public class TextLink extends MovieClip 	{		private var _button			:MovieClip;		private var _id				:String = null;		private var _colors			:String = "normal";		private var _selected		:Boolean = false;						public function TextLink()		{		}						/*////////////////////////////////////////////////////////////////////////////////////////////		 * 	PUBLIC METHODS	   //*////////////////////////////////////////////////////////////////////////////////////////////		/*//		 *  INIT	   //*/		public function init(button:MovieClip, id:String, colors:String = "normal"):void		{			_button = button;			_id = id;			_colors = colors;						_button.focusRect = false;			_button.buttonMode = true;						_button.hit.addEventListener(MouseEvent.MOUSE_OVER, _onMouseOver, false, 0, true);			_button.hit.addEventListener(MouseEvent.MOUSE_OUT, _onMouseOut, false, 0, true);			_button.hit.addEventListener(MouseEvent.CLICK, _onClick, false, 0, true);		}						/*//		 * 	GETTER/SETTER METHODS	   //*/				public function get selected():Boolean		{			return _selected;		}				public function set selected(boo:Boolean):void		{			_selected = boo;		}						/*//		 * 	COMMANDS	   //*/		public function show():void		{			this.visible = true;		}				public function hide():void		{			this.visible = false;		}				public function select():void		{			_colors == "normal" ? TweenLite.to(_button.txt, .2, {tint:Constants.ROLLOVER_COLOR}) : TweenLite.to(_button.txt, .2, {tint:Constants.ROLLOUT_COLOR});		}				public function deselect():void		{			TweenLite.to(_button.txt, .2, {tint:null});		}				public function destroy():void		{			_button.hit.removeEventListener(MouseEvent.MOUSE_OVER, _onMouseOver);			_button.hit.removeEventListener(MouseEvent.MOUSE_OUT, _onMouseOut);			_button.hit.removeEventListener(MouseEvent.CLICK, _onClick);		}						/*////////////////////////////////////////////////////////////////////////////////////////////		 * 	PRIVATE METHODS	   //*////////////////////////////////////////////////////////////////////////////////////////////		/*//		 *  COMMANDS	   //*/				/*//		 * 	CALLBACKS	   //*/		private function _onMouseOver($e:MouseEvent):void		{			if(!_selected) select();		}				private function _onMouseOut($e:MouseEvent):void		{			if(!_selected) deselect();		}				private function _onClick($e:MouseEvent):void		{			//if(!_selected)			//{				//_selected = true;				dispatchEvent(new ShellEvent( ShellEvent.BUTTON_CLICK, {id:_id} ));			//}		}			}	}