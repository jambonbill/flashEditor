package com.playpower.ui {	import flash.display.Sprite;	import flash.display.Graphics;	import flash.events.Event;	import com.carlcalderon.arthropod.Debug;	import com.playpower.core.Constants;	import flash.text.engine.GraphicElement;	import flash.events.MouseEvent;	import flash.events.TimerEvent;	import flash.utils.Timer;	import com.playpower.events.CustomEvent;	public class PP_Slider extends Sprite	{		private var _id:String;		private var _w:Number;		private var _h:Number;		private var _initVal:Number;		private var _maxVal:Number;		private var _str:String;		private var _background:Sprite;		private var _scrubber:Sprite;		private var _btn:Sprite;		private var _value:PP_Label;		private var _label:PP_Label;		private var _timer:Timer;		public function PP_Slider(id:String, w:Number, h:Number, initVal:Number, maxVal:Number, str:String)		{			_id = id;			_w = w;			_h = h;			_initVal = initVal;			_maxVal = maxVal;			_str = str;						_timer = new Timer(20);			_timer.addEventListener(TimerEvent.TIMER, _onTimer, false, 0, true);						this.addEventListener(Event.ADDED_TO_STAGE, _onAddedToStage, false, 0, true);		}		public function _onAddedToStage($e:Event):void		{			this.removeEventListener(Event.ADDED_TO_STAGE, _onAddedToStage);			_background = new Sprite();			this.addChild(_background);			var g:Graphics = _background.graphics;			g.beginFill(Constants.UI_DK_BLUE);			g.drawRect(0,0,_w,_h);			g.endFill();						_scrubber = new Sprite();			this.addChild(_scrubber);			var g2:Graphics = _scrubber.graphics;			g2.beginFill(Constants.UI_MED_BLUE);			g2.drawRect(0,0,_w,_h);			g2.endFill();			_scrubber.width = 0;						_btn = new Sprite();			_btn.buttonMode = true;			_btn.addEventListener(MouseEvent.MOUSE_DOWN, _onBtnDown, false, 0, true);			//_btn.addEventListener(MouseEvent.MOUSE_UP, _onBtnUp, false, 0, true);			this.stage.addEventListener(MouseEvent.MOUSE_UP, _onBtnUp, false, 0, true);			this.addChild(_btn);			var g3:Graphics = _btn.graphics;			g3.beginFill(0,0);			g3.drawRect(0,0,_w,_h);			g3.endFill();						_value = new PP_Label(_initVal.toString());			_value.x = 1;			_value.y = 2;			this.addChild(_value);						_label = new PP_Label(_str);			_label.x = _w + 1;			_label.y = 2;			this.addChild(_label);						_scrubber.width = _w*(Number(_initVal)/_maxVal);		}				private function _onBtnDown($e:MouseEvent):void		{			_timer.start();		}				private function _onBtnUp($e:MouseEvent):void		{			_timer.stop();		}				private function _onTimer($e:TimerEvent):void		{			var percent = this.mouseX/_w;			var val:String;						var n = Math.round(_maxVal*percent);			if(n<0)			{				val = "0";			}			else if(n>_maxVal)			{				val = _maxVal.toString();			}			else			{				val = n.toString();			};			_value.update(val);			_scrubber.width = _w*(Number(val)/_maxVal);						var pct:Number = Number(val)/_maxVal;			dispatchEvent( new CustomEvent(CustomEvent.SLIDER_PROGRESS, {id:_id, val:val, percent:pct}) );		}				public function destroy():void		{			_timer.stop();			_timer.removeEventListener(TimerEvent.TIMER, _onTimer);			_timer = null;						// remove child elems		}	}}