package com.playpower.ui{	import flash.display.Sprite;	import flash.display.Graphics;	import flash.events.Event;	import flash.events.MouseEvent;	import flash.text.TextField;	import com.carlcalderon.arthropod.Debug;	import com.playpower.core.*;	import com.playpower.events.CustomEvent;	public class PP_TileButton extends Sprite	{		private var _id:String;		private var _tile:Sprite;		private var _txt:TextField;		public function PP_TileButton(id:String)		{			_id = id;			this.addEventListener(Event.ADDED_TO_STAGE, _onAddedToStage, false, 0, true);		}		public function _onAddedToStage($e:Event):void		{			//Debug.log("PP_Toggle added to stage");			this.removeEventListener(Event.ADDED_TO_STAGE, _onAddedToStage);						// draw tile			_tile = new Sprite();			var g:Graphics = _tile.graphics;			g.beginFill(Constants["CLR_"+_id]);			g.drawRect(0,0,Constants.COLOR_TILE_WIDTH,Constants.COLOR_TILE_HEIGHT);			g.endFill();					this.addChild(_tile);			_tile.buttonMode = true;			_tile.addEventListener(MouseEvent.MOUSE_UP, _onMouseUp, false, 0, true);			//_tile.addEventListener(MouseEvent.MOUSE_DOWN, _onMouseDown, false, 0, true);			//_tile.addEventListener(MouseEvent.MOUSE_OVER, _onMouseOver, false, 0, true);			//_tile.addEventListener(MouseEvent.MOUSE_OUT, _onMouseOut, false, 0, true);						// tile label			_txt = CustomTextField.getTextField(_id,Constants.CLR_TEXT,10);			_txt.x = -2;			_txt.y = 4;			this.addChild(_txt);		}				public function toggleString():void		{			_txt.visible = !_txt.visible;		}				private function _onMouseOver($e:MouseEvent):void		{			//dispatchEvent( new CustomEvent(CustomEvent.BUTTON_UP, {id:_id}) );		}				private function _onMouseOut($e:MouseEvent):void		{			//dispatchEvent( new CustomEvent(CustomEvent.BUTTON_UP, {id:_id}) );		}				private function _onMouseDown($e:MouseEvent):void		{			//dispatchEvent( new CustomEvent(CustomEvent.BUTTON_UP, {id:_id}) );		}				private function _onMouseUp($e:MouseEvent):void		{			dispatchEvent( new CustomEvent(CustomEvent.BUTTON_UP, {id:_id}) );		}				public function destroy():void		{			this.removeChild(_txt);			_txt = null;			this.removeChild(_tile);			_tile.removeEventListener(MouseEvent.MOUSE_UP, _onMouseUp);			//_tile.removeEventListener(MouseEvent.MOUSE_DOWN, _onMouseDown);			//_tile.removeEventListener(MouseEvent.MOUSE_OVER, _onMouseOver);			//_tile.removeEventListener(MouseEvent.MOUSE_OUT, _onMouseOut);			_tile = null;			_id = null;		}	}}