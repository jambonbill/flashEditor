package com.playpower.ui{	import com.carlcalderon.arthropod.Debug;		import flash.display.Sprite;	import flash.display.MovieClip;	import flash.display.Graphics;	import flash.events.Event;	import flash.events.MouseEvent;	/**	 * @author temp	 */	public class OutlineButton extends Sprite 	{		private var _id:String;		private var _w:Number;		private var _h:Number;		private var _outline:Sprite;		private var _sel:Boolean = false;						public function OutlineButton() 		{			super();		}				/*////////////////////////////////////////////////////////////////////////////////////////////		 * 	PUBLIC METHODS	   //*////////////////////////////////////////////////////////////////////////////////////////////		/*//		 * 	INIT	   //*/		public function init(id:String, w:Number,h:Number):void		{			_id = id;			_w = w;			_h = h;						this.addEventListener(Event.ADDED_TO_STAGE, _onAddedToStage, false, 0, true);		}						/*//		 *  COMMANDS	   //*/	    public function deselect():void		{			_sel = false;			_outline.visible = false;		}			    public function select():void		{			_sel = true;			_outline.visible = true;		}				public function show():void		{			this.visible = true;		}				public function hide():void		{			this.visible = false;		}				public function destroy():void		{			this.removeEventListener(MouseEvent.MOUSE_OVER, _onMouseOver);			this.removeEventListener(MouseEvent.MOUSE_OUT, _onMouseOut);			this.removeEventListener(MouseEvent.CLICK, _onClick);			//while(this.numChildren > 0) this.removeChildAt(0);		}						/*////////////////////////////////////////////////////////////////////////////////////////////		 * 	PRIVATE METHODS	   //*////////////////////////////////////////////////////////////////////////////////////////////		/*//		 * 	COMMANDS	   //*/		private function _createButton():void		{			// val			//var val = rgb2hex(Math.floor(Math.random()*256),Math.floor(Math.random()*256),Math.floor(Math.random()*256));			//create hit area			var sp:Sprite = new Sprite();			var g:Graphics = sp.graphics;			g.beginFill(0xFF0000,0);			g.drawRect(0,0,_w,_h);			g.endFill();						sp.buttonMode = true;			sp.focusRect = false;			sp.addEventListener(MouseEvent.MOUSE_OVER, _onMouseOver, false, 0, true);			sp.addEventListener(MouseEvent.MOUSE_OUT, _onMouseOut, false, 0, true);			sp.addEventListener(MouseEvent.CLICK, _onClick, false, 0, true);						//add clips to stage			this.addChild(sp);						// draw outline			_outline = new Sprite();			var g2:Graphics = _outline.graphics;			g2.lineStyle(1,0xFFFFFF);			g2.drawRect(0,0,_w,_h);			_outline.visible = false;			this.addChild(_outline);		}				private function rgb2hex(r:int, g:int, b:int) : uint		{			var redChannel = r << 16;			var greenChannel = g << 8;			var blueChannel = b;						return redChannel | greenChannel | blueChannel;		}				/*//		 * 	CALLBACKS	   //*/	    private function _onAddedToStage($e:Event):void		{			this.removeEventListener(Event.ADDED_TO_STAGE, _onAddedToStage);						_createButton();		}				private function _onMouseOver($e:MouseEvent):void		{			//Debug.log("ClearButton _onMouseOver");			_outline.visible = true;			//dispatchEvent( new ShellEvent(ShellEvent.BUTTON_OVER, {id:_id}) );		}				private function _onMouseOut($e:MouseEvent):void		{			//Debug.log("ClearButton _onMouseOut");			if(!_sel) _outline.visible = false;			//dispatchEvent( new ShellEvent(ShellEvent.BUTTON_OUT, {id:_id}) );		}				private function _onClick($e:MouseEvent):void		{			//Debug.log("ClearButton _onMouseUp");			dispatchEvent( $e );		}	}}