package com.playpower.views{	import flash.display.Sprite;	import flash.events.Event;	import flash.events.MouseEvent;	import com.carlcalderon.arthropod.Debug;	import com.playpower.core.*;	import com.playpower.events.CustomEvent;	import com.playpower.ui.PP_TileButton;	public class NESPalette extends Sprite	{		private var _controller:Controller;		private var _tileArr:Array;				public function NESPalette()		{			_controller = Controller.getInstance();			this.addEventListener(Event.ADDED_TO_STAGE, _onAddedToStage, false, 0, true);		}		public function _onAddedToStage($e:Event):void		{			Debug.log("NESPalette added to stage");			this.removeEventListener(Event.ADDED_TO_STAGE, _onAddedToStage);						_tileArr = [];			var yy:Number = 0; //y-coord of tile			for(var i=0; i<(Constants.NES_PALETTE_WIDTH/Constants.COLOR_TILE_WIDTH)*(Constants.NES_PALETTE_HEIGHT/Constants.COLOR_TILE_HEIGHT); i++)			{				// figure the y based on where we are in the loop				if ( (i*Constants.COLOR_TILE_WIDTH)%Constants.NES_PALETTE_WIDTH == 0 && i!=0) yy += Constants.COLOR_TILE_HEIGHT;				var tile:PP_TileButton = new PP_TileButton(_controller.nesArr[i]);				tile.addEventListener(CustomEvent.BUTTON_UP, _onTileUp, false, 0, true);				tile.x = (i*Constants.COLOR_TILE_WIDTH) - (Constants.NES_PALETTE_WIDTH*(yy/Constants.COLOR_TILE_HEIGHT));				tile.y = yy;								this.addChild(tile);				_tileArr.push(tile);			}					}				public function toggleHexDisplay():void		{			for(var i=0; i<_tileArr.length; i++)			{				var tile:PP_TileButton = _tileArr[i] as PP_TileButton;				tile.toggleString();			}		}				private function _onTileOver($e:CustomEvent):void		{		}				private function _onTileOff($e:CustomEvent):void		{		}				private function _onTileDown($e:CustomEvent):void		{		}				private function _onTileUp($e:CustomEvent):void		{			dispatchEvent( $e );		}				public function destroy():void		{			for(var i=0; i<_tileArr.length; i++)			{				var tile:PP_TileButton = _tileArr[i] as PP_TileButton;				this.removeChild(tile);				tile.removeEventListener(CustomEvent.BUTTON_UP, _onTileUp);				tile.destroy();				tile = null;			}			_tileArr = [];			_controller = null;		}	}}