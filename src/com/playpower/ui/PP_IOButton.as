package com.playpower.ui{	import flash.display.DisplayObject;	import flash.display.Sprite;	import flash.display.Graphics;	import flash.events.Event;	import flash.events.MouseEvent;	import com.carlcalderon.arthropod.Debug;	import com.playpower.core.Constants;	import com.playpower.events.CustomEvent;	public class PP_IOButton extends Sprite	{		//private var _str:String;		//private var _btn:Sprite;		private var _id:String;		private var _asset:*;//PP_Label;		//private var _label:PP_Label;		private var _curVal:Boolean = false;		public function PP_IOButton(id:String, asset:*) //str:String, 		{			//_str = str;			_id = id;			_asset = asset;			//_label = label;						this.addEventListener(Event.ADDED_TO_STAGE, _onAddedToStage, false, 0, true);		}		public function _onAddedToStage($e:Event):void		{			this.removeEventListener(Event.ADDED_TO_STAGE, _onAddedToStage);						this.addChild(_asset);						/*_btn = new Sprite();			this.addChild(_btn);			var g:Graphics = _btn.graphics;			g.beginFill(Constants.UI_DK_BLUE);			g.drawRect(0,0,48,16);//Constants.IO_BUTTON_WIDTH,Constants.IO_BUTTON_HEIGHT);			g.endFill();*/						/*_label = new PP_Label(_str);			_label.y = 2;			this.addChild(_label);*/		}				public function disable():void		{			this.alpha = .5;						/*_btn.buttonMode = false;			_btn.removeEventListener(MouseEvent.MOUSE_DOWN, _onBtnDown);			_btn.removeEventListener(MouseEvent.MOUSE_UP, _onBtnUp);			_btn.removeEventListener(MouseEvent.MOUSE_OVER, _onBtnOver);			_btn.removeEventListener(MouseEvent.MOUSE_OUT, _onBtnOff);*/						_asset.buttonMode = false;			_asset.removeEventListener(MouseEvent.MOUSE_DOWN, _onBtnDown);			_asset.removeEventListener(MouseEvent.MOUSE_UP, _onBtnUp);			_asset.removeEventListener(MouseEvent.MOUSE_OVER, _onBtnOver);			_asset.removeEventListener(MouseEvent.MOUSE_OUT, _onBtnOff);		}				public function enable():void		{			this.alpha = 1;						/*_btn.buttonMode = true;			_btn.addEventListener(MouseEvent.MOUSE_DOWN, _onBtnDown, false, 0, true);			_btn.addEventListener(MouseEvent.MOUSE_UP, _onBtnUp, false, 0, true);			_btn.addEventListener(MouseEvent.MOUSE_OVER, _onBtnOver, false, 0, true);			_btn.addEventListener(MouseEvent.MOUSE_OUT, _onBtnOff, false, 0, true);*/						_asset.buttonMode = true;			_asset.addEventListener(MouseEvent.MOUSE_DOWN, _onBtnDown, false, 0, true);			_asset.addEventListener(MouseEvent.MOUSE_UP, _onBtnUp, false, 0, true);			_asset.addEventListener(MouseEvent.MOUSE_OVER, _onBtnOver, false, 0, true);			_asset.addEventListener(MouseEvent.MOUSE_OUT, _onBtnOff, false, 0, true);		}				private function _onBtnOver($e:MouseEvent):void		{			/*var g:Graphics = _btn.graphics;			g.beginFill(Constants.UI_MED_BLUE);			g.drawRect(0,0,48,16);//Constants.IO_BUTTON_WIDTH,Constants.IO_BUTTON_HEIGHT);			g.endFill();*/						_asset.btn_on.alpha = 1;		}				private function _onBtnOff($e:MouseEvent):void		{			/*var g:Graphics = _btn.graphics;			g.beginFill(Constants.UI_DK_BLUE);			g.drawRect(0,0,48,16);//Constants.IO_BUTTON_WIDTH,Constants.IO_BUTTON_HEIGHT);			g.endFill();*/						_asset.btn_on.alpha = 0;		}				private function _onBtnDown($e:MouseEvent):void		{			/*var g:Graphics = _btn.graphics;			g.beginFill(Constants.UI_HILIGHT);			g.drawRect(0,0,48,16);//Constants.IO_BUTTON_WIDTH,Constants.IO_BUTTON_HEIGHT);			g.endFill();*/						if(_asset.btn_press) _asset.btn_press.alpha = 1;		}				private function _onBtnUp($e:MouseEvent):void		{			/*var g:Graphics = _btn.graphics;			g.beginFill(Constants.UI_MED_BLUE);			g.drawRect(0,0,48,16);//Constants.IO_BUTTON_WIDTH,Constants.IO_BUTTON_HEIGHT);			g.endFill();*/						if(_asset.btn_press) _asset.btn_press.alpha = 0;						dispatchEvent( new CustomEvent(CustomEvent.BUTTON_UP, {id:_id}) );		}				public function destroy():void		{					}	}}